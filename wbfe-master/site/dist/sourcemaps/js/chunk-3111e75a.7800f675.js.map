{"version":3,"sources":["webpack:///./src/dapps/MakerDai/makerHelpers/locateCdps.js","webpack:///./src/dapps/MakerDai/makerHelpers/addressesMAIN.js","webpack:///./src/dapps/MakerDai/MakerCDP/constants.js","webpack:///./src/dapps/MakerDai/MakerCDP/daiMath.js","webpack:///./src/dapps/MakerDai/MakerCDP/MakerCdpBase.js","webpack:///./src/dapps/MakerDai/MakerCDP/MakerCDP.js","webpack:///./src/dapps/MakerDai/MakerCDP/index.js","webpack:///./src/dapps/MakerDai/makerHelpers/setups.js","webpack:///./src/dapps/MakerDai/makerHelpers/currencyHelper.js","webpack:///./src/dapps/MakerDai/makerHelpers/ABIs/migrateABI.js","webpack:///./src/dapps/MakerDai/makerHelpers/ABIs/ERC20Token.abi.js","webpack:///./src/dapps/MakerDai/makerHelpers/ABIs/GetCdps.js","webpack:///./src/dapps/MakerDai/makerHelpers/ABIs/ProxyRegistry.js","webpack:///./src/dapps/MakerDai/makerHelpers/ABIs/DssCdpManager.js","webpack:///./src/dapps/MakerDai/makerHelpers/ABIs/Spotter.js","webpack:///./src/dapps/MakerDai/makerHelpers/ABIs/Vat.js","webpack:///./src/dapps/MakerDai/makerHelpers/helpers.js","webpack:///./src/dapps/MakerDai/MakerCDP/chainCalls.js","webpack:///./src/dapps/MakerDai/makerHelpers/chainCalls.js"],"names":["locateCdps","self","cdpsWithoutProxy","cdps","proxyAddress","getCdpIds","web3","allCdpIds","map","entry","id","cdpIdToTypeMapping","reduce","acc","cur","ilk","cdpsWithType","withType","withProxy","withoutProxy","DEPLOYER","MULTICALL","FAUCET","MCD_DEPLOY","MCD_GOV","MCD_ADM","MCD_VAT","MCD_JUG","MCD_CAT","MCD_VOW","MCD_JOIN_DAI","MCD_FLAP","MCD_FLOP","MCD_PAUSE","MCD_PAUSE_PROXY","MCD_GOV_ACTIONS","MCD_DAI","MCD_SPOT","MCD_POT","MCD_END","MCD_ESM","PROXY_ACTIONS","PROXY_ACTIONS_END","PROXY_ACTIONS_DSR","CDP_MANAGER","GET_CDPS","PROXY_FACTORY","PROXY_REGISTRY","ETH","VAL_ETH","PIP_ETH","MCD_JOIN_ETH_A","MCD_FLIP_ETH_A","BAT","VAL_BAT","PIP_BAT","MCD_JOIN_BAT_A","MCD_FLIP_BAT_A","SAI","PIP_SAI","MCD_JOIN_SAI","MCD_FLIP_SAI","PROXY_PAUSE_ACTIONS","PROXY_DEPLOYER","SAI_TUB","MIGRATION","MIGRATION_PROXY_ACTIONS","defaultIlk","BigNumber","USD","createCurrency","DAI","BnZero","collateralValue","collateralAmount","price","times","debtValue","art","rate","wei","shiftedBy","collateralizationRatio","eq","ratio","createCurrencyRatio","Infinity","div","_amount","liquidationPrice","liquidationRatio","type","minSafeCollateralAmount","toBigNumber","num","MakerCdpBase","cdpId","services","sysVars","this","cdpIdFull","cdp","ready","doUpdate","noProxy","cdpType","needsUpdate","closing","opening","migrated","migrateCdpActive","migrateCdpStage","cdpTypeObject","_mcdManager","get","getCdpType","mcdCurrencies","_liqPrice","isSafe","_collatRatio","pethCollateral","_usdCollateral","_governanceFee","tokenMapping","i","_typeService","cdpTypes","length","currency","symbol","name","override","afterInitialization","amount","toUsd","currentPrice","lt","toFixed","ROUND_DOWN","replace","address","cdpCollateralType","toString","_collateralAmount","e","_collateralAvailable","collateralAvailable","_collateralizationRatio","gte","plus","lte","_collateralValue","daiMath","value","_debtValue","_cdpService","getTokens","daiBalance","dustValues","ethPrice","_ethCollateral","tokens","hasProxy","liquidationPenalty","rawType","mcdManager","_liquidationRatio","Object","keys","_liquidationPrice","maxDai","minus","pethPrice","zeroDebt","maxPethDraw","pethMin","tl","tr","toUSD","_mkrToken","mkrBalance","minEth","_proxyAddress","_proxyService","proxyAllowances","_pethPrice","baseStabilityFee","annualStabilityFee","_tokenService","wethToPethRatio","ethCollateral","val","isBigNumber","toNumber","raw","decimals","round","displayFixedValue","MakerCDP","minDai","DAI_NAME","updateValues","getGovernanceFee","toUpdate","getProxy","getMakerCdp","getValuesFromChain","console","error","getUrns","urns","ink","proxyService","currentProxy","cdpService","give","approveUnlimited","daiToken","mkrToken","ethQty","daiQty","getPriceOfCurrency","calcCollatRatio","changeAmountOnly","calcLiquidationPrice","getProxyAddress","push","denominator","pow","enoughMkrToWipe","getCombinedDebtValue","balances","contract","eth","Contract","ERC20","addresses","methods","allowance","currentAddress","call","getEventHistory","curr","balance","isNaN","_ethQty","ethUnit","toWei","getBalanceOf","currentAllowance","getProxyAllowancefor","convertToTokenWei","bnOver","minDeposit","getCurrentPriceFor","toPeth","ensureProxy","needToFinishMigrating","openLockAndDraw","getMakerCurrencies","newCdp","getOwner","owner","lock","acknowledgeBypass","gt","drawDai","freeCollateral","max","wipeAll","wipeDai","shutProxy","log","proxy","giveToProxy","ServiceRoles","PRICE","CDP","PROXY","TOKEN","CDP_TYPE","AUCTION","SYSTEM_DATA","QUERY_API","SAVINGS","setupServices","maker","Promise","all","service","result","_systemData","_mcdSaving","setupPriceAndRatios","_priceService","getAnnualBaseRate","stabilityFee","getDetailsForTokens","collateralTokens","token","getToken","then","res","getDustValues","getDustValue","checkAllowances","_contract","collateralOptions","setupCdpManage","includes","activeValues","systemValues","currentCdpId","getValuesForManage","bind","currentCdp","activeCdps","maxEthDraw","maxUsdDraw","usdCollateral","collateralRatio","collatRatio","governanceFeeOwed","ethCollateralNum","loadCdpDetails","buildCdpObject","loadCdpDetail","updateActiveCdp","removeObject","hasOwnProperty","currentCdpIds","newCdps","filter","item","newCdpsWithoutProxy","removedCdps","parseInt","forEach","buildEmpty","options","useOld","_targetPrice","_daiToken","account","priceService","makerCDP","init","Toast","afterClose","afterOpen","$route","checkBalances","idProp","update","updateSystemVariables","setupCdpManageFunc","runAfterUpdate","afterUpdate","fn","pop","creatingCdp","goToManage","goToSave","gotoCreate","responseHandler","$t","INFO","valuesUpdated","Maker","vals","TKNS","constant","inputs","outputs","internalType","payable","stateMutability","anonymous","indexed","bignumber","displayFixed","displayPercentValue","finiteCheck","roundUp","isFinite","ROUND_UP","displayFixedPercent","CdpNum","undefined","one","two","three","getInt","atValue","padRight","string","chars","sign","Array","join","toHex","str","with0x","rightPadding","charCodeAt","stringToBytes","Buffer","from","Vat","ilks","CdpManager","vat","urn","bytesToString","hex","GetCdps","getCdpsDesc","results","ids","assert","collected","index"],"mappings":"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","file":"js/chunk-3111e75a.7800f675.js","sourcesContent":["import { toChecksumAddress } from '@/helpers/addressUtils';\nimport { getCdpIds } from './chainCalls';\n\nasync function locateCdps(self) {\n  self.cdpsWithoutProxy = [];\n  self.cdps = [];\n  let cdps = [];\n  if (self.proxyAddress) {\n    cdps = await getCdpIds(self.web3, self.proxyAddress);\n  }\n\n  self.allCdpIds = [...cdps].map(entry =>\n    typeof entry !== 'number' ? entry.id : entry\n  );\n\n  const cdpIdToTypeMapping = [...cdps].reduce((acc, cur) => {\n    acc[cur.id] = cur.ilk;\n    return acc;\n  }, {});\n  self.cdpsWithType = cdpIdToTypeMapping;\n  return {\n    withType: cdpIdToTypeMapping,\n    withProxy: cdps.map(entry =>\n      typeof entry !== 'number' ? entry.id : entry\n    ),\n    withoutProxy: []\n  };\n}\n\n// async function locateOldCdps(self, _cdpService) {\n//   self.cdpsWithoutProxy = [];\n//   const cdpsWithoutProxy = await locateCdpsWithoutProxy(self, _cdpService);\n//   self.cdps = [];\n//   let cdps = [];\n//   if (self.proxyAddress) {\n//     cdps = await locateCdpsProxy(self, _cdpService);\n//   }\n//\n//   self.allCdpIds = [...cdpsWithoutProxy, ...cdps].map(entry =>\n//     typeof entry !== 'number' ? entry.id : entry\n//   );\n//\n//   const cdpIdToTypeMapping = [...cdpsWithoutProxy, ...cdps].reduce(\n//     (acc, cur) => {\n//       acc[cur.id] = cur.ilk;\n//       return acc;\n//     },\n//     {}\n//   );\n//   self.cdpsWithType = cdpIdToTypeMapping;\n//   return {\n//     withType: cdpIdToTypeMapping,\n//     withProxy: cdps.map(entry =>\n//       typeof entry !== 'number' ? entry.id : entry\n//     ),\n//     withoutProxy: cdpsWithoutProxy.map(entry =>\n//       typeof entry !== 'number' ? entry.id : entry\n//     )\n//   };\n// }\n\nasync function locateCdpsWithoutProxy(self, _cdpService) {\n  const directCdps = await _cdpService.getCdpIds(self.account.address);\n  const directCdpsCheckSum = await _cdpService.getCdpIds(\n    toChecksumAddress(self.account.address)\n  );\n  return directCdps.concat(directCdpsCheckSum);\n}\n\nasync function locateCdpsProxy(self, _cdpService) {\n  self.proxyAddress = await self.getProxy();\n  return await _cdpService.getCdpIds(self.proxyAddress);\n}\n\nexport { locateCdps, locateCdpsWithoutProxy, locateCdpsProxy };\n","export default {\n  DEPLOYER: '0xdDb108893104dE4E1C6d0E47c42237dB4E617ACc',\n  MULTICALL: '0x5e227ad1969ea493b43f840cff78d08a6fc17796',\n  FAUCET: '0x0000000000000000000000000000000000000000',\n  MCD_DEPLOY: '0xbaa65281c2fa2baacb2cb550ba051525a480d3f4',\n  MCD_GOV: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2',\n  MCD_ADM: '0x9eF05f7F6deB616fd37aC3c959a2dDD25A54E4F5',\n  MCD_VAT: '0x35d1b3f3d7966a1dfe207aa4514c12a259a0492b',\n  MCD_JUG: '0x19c0976f590d67707e62397c87829d896dc0f1f1',\n  MCD_CAT: '0x78f2c2af65126834c51822f56be0d7469d7a523e',\n  MCD_VOW: '0xa950524441892a31ebddf91d3ceefa04bf454466',\n  MCD_JOIN_DAI: '0x9759a6ac90977b93b58547b4a71c78317f391a28',\n  MCD_FLAP: '0xdfe0fb1be2a52cdbf8fb962d5701d7fd0902db9f',\n  MCD_FLOP: '0xbe00fe8dfd9c079f1e5f5ad7ae9a3ad2c571fcac',\n  MCD_PAUSE: '0xbe286431454714f511008713973d3b053a2d38f3',\n  MCD_PAUSE_PROXY: '0xbe8e3e3618f7474f8cb1d074a26affef007e98fb',\n  MCD_GOV_ACTIONS: '0x4f5f0933158569c026d617337614d00ee6589b6e',\n  MCD_DAI: '0x6b175474e89094c44da98b954eedeac495271d0f',\n  MCD_SPOT: '0x65c79fcb50ca1594b025960e539ed7a9a6d434a3',\n  MCD_POT: '0x197e90f9fad81970ba7976f33cbd77088e5d7cf7',\n  MCD_END: '0xab14d3ce3f733cacb76ec2abe7d2fcb00c99f3d5',\n  MCD_ESM: '0x0581a0abe32aae9b5f0f68defab77c6759100085',\n  PROXY_ACTIONS: '0x82ecd135dce65fbc6dbdd0e4237e0af93ffd5038',\n  PROXY_ACTIONS_END: '0x069b2fb501b6f16d1f5fe245b16f6993808f1008',\n  PROXY_ACTIONS_DSR: '0x07ee93aeea0a36fff2a9b95dd22bd6049ee54f26',\n  CDP_MANAGER: '0x5ef30b9986345249bc32d8928b7ee64de9435e39',\n  GET_CDPS: '0x36a724bd100c39f0ea4d3a20f7097ee01a8ff573',\n  PROXY_FACTORY: '0xa26e15c895efc0616177b7c1e7270a4c7d51c997',\n  PROXY_REGISTRY: '0x4678f0a6958e4d2bc4f1baf7bc52e8f3564f3fe4',\n  ETH: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n  VAL_ETH: '0x81fe72b5a8d1a857d176c3e7d5bd2679a9b85763',\n  PIP_ETH: '0x81fe72b5a8d1a857d176c3e7d5bd2679a9b85763',\n  MCD_JOIN_ETH_A: '0x2f0b23f53734252bda2277357e97e1517d6b042a',\n  MCD_FLIP_ETH_A: '0xd8a04f5412223f513dc55f839574430f5ec15531',\n  BAT: '0x0d8775f648430679a709e98d2b0cb6250d2887ef',\n  VAL_BAT: '0xb4eb54af9cc7882df0121d26c5b97e802915abe6',\n  PIP_BAT: '0xb4eb54af9cc7882df0121d26c5b97e802915abe6',\n  MCD_JOIN_BAT_A: '0x3d0b1912b66114d4096f48a8cee3a56c231772ca',\n  MCD_FLIP_BAT_A: '0xaa745404d55f88c108a28c86abe7b5a1e7817c07',\n  SAI: '0x89d24a6b4ccb1b6faa2625fe562bdd9a23260359',\n  PIP_SAI: '0x54003dbf6ae6cba6ddae571ccdc34d834b44ab1e',\n  MCD_JOIN_SAI: '0xad37fd42185ba63009177058208dd1be4b136e6b',\n  MCD_FLIP_SAI: '0x5432b2f3c0dff95aa191c45e5cbd539e2820ae72',\n  PROXY_PAUSE_ACTIONS: '0x6bda13d43b7edd6cafe1f70fb98b5d40f61a1370',\n  PROXY_DEPLOYER: '0x1b93556ab8dccef01cd7823c617a6d340f53fb58',\n  SAI_TUB: '0x448a5065aebb8e423f0896e6c5d525c040f59af3',\n  MIGRATION: '0xc73e0383f3aff3215e6f04b0331d58cecf0ab849',\n  MIGRATION_PROXY_ACTIONS: '0xe4b22d484958e582098a98229a24e8a43801b674'\n};\n","import BigNumber from 'bignumber.js';\n\nexport const ServiceRoles = {\n  CDP_MANAGER: 'mcd:cdpManager',\n  CDP_TYPE: 'mcd:cdpType',\n  AUCTION: 'mcd:auction',\n  SYSTEM_DATA: 'mcd:systemData',\n  QUERY_API: 'mcd:queryApi',\n  SAVINGS: 'mcd:savings'\n};\n\nexport const WAD = new BigNumber('1e18');\nexport const RAY = new BigNumber('1e27');\nexport const RAD = new BigNumber('1e45');\nexport const defaultIlk = 'ETH-A';\n\nexport const SECONDS_PER_YEAR = 365 * 24 * 60 * 60;\n","import BigNumber from 'bignumber.js';\nimport { createCurrency, createCurrencyRatio } from '@makerdao/currency';\nimport { RAY } from './constants';\nconst USD = createCurrency('USD');\nconst DAI = createCurrency('DAI');\n// NOTE: When a function below has an argument with the same name as a function\n// defined earlier in the file, that means it expects that argument's value to\n// be the return value of a call to that earlier function.\n//\n// e.g. the fourth argument of `price`\n\n// ilk math\nconst BnZero = new BigNumber(0);\n\nexport function debtCeiling(line) {\n  return DAI.rad(line);\n}\n\nexport function liquidationPenalty(chop) {\n  return new BigNumber(chop.toString()).dividedBy(RAY).minus(1).toNumber();\n}\n\nexport function liquidationRatio(mat) {\n  const ratio = createCurrencyRatio(USD, DAI);\n  return ratio(new BigNumber(mat.toString()).dividedBy(RAY).toString());\n}\n\nexport function price(currency, par, spot, liquidationRatio) {\n  par = new BigNumber(par.toString()).dividedBy(RAY);\n  spot = new BigNumber(spot.toString()).dividedBy(RAY);\n  const ratio = createCurrencyRatio(USD, currency);\n  const price = spot.times(par).times(liquidationRatio.toNumber());\n  return ratio(price);\n}\n\nconst secondsPerYear = 60 * 60 * 24 * 365;\n\nexport function annualStabilityFee(duty) {\n  duty = new BigNumber(duty.toString()).dividedBy(RAY);\n  BigNumber.config({ POW_PRECISION: 100 });\n  return duty.pow(secondsPerYear).minus(1).toNumber();\n}\n\n// cdp math\n\nexport function collateralAmount(currency, ink) {\n  return currency.wei(ink);\n}\n\nexport function collateralValue(collateralAmount, price) {\n  return collateralAmount.times(price);\n}\n\nexport function debtValue(art, rate) {\n  art = DAI.wei(art);\n  return art.times(rate).shiftedBy(-27);\n}\n\nexport function collateralizationRatio(collateralValue, debtValue) {\n  if (debtValue.eq(BnZero)) {\n    const ratio = createCurrencyRatio(USD, DAI);\n    return ratio(Infinity);\n  }\n  return collateralValue.div(debtValue._amount);\n}\n\nexport function liquidationPrice(\n  collateralAmount,\n  debtValue,\n  liquidationRatio\n) {\n  if (collateralAmount.eq(BnZero)) {\n    const ratio = createCurrencyRatio(USD, collateralAmount.type);\n    return ratio(Infinity);\n  }\n  return debtValue\n    .times(liquidationRatio._amount)\n    .div(collateralAmount._amount);\n}\n\nexport function minSafeCollateralAmount(debtValue, liquidationRatio, price) {\n  return debtValue.times(liquidationRatio).div(price);\n}\n\nexport function daiAvailable(collateralValue, debtValue, liquidationRatio) {\n  const maxSafeDebtValue = collateralValue.div(liquidationRatio);\n  return debtValue.lt(maxSafeDebtValue)\n    ? DAI(maxSafeDebtValue.minus(debtValue))\n    : DAI(0);\n}\n","import BigNumber from 'bignumber.js';\nimport { maxPethDraw, maxDai, displayFixedValue } from '../makerHelpers';\nimport { defaultIlk } from './constants';\n\nimport * as daiMath from './daiMath';\n\nconst toBigNumber = num => {\n  return new BigNumber(num);\n};\n\n// Basically just to hold the various getters and static methods to somewhat de-clutter the implementation\nexport default class MakerCdpBase {\n  constructor(cdpId, web3, services, sysVars) {\n    if (cdpId === null) {\n      this.cdpId = cdpId;\n    } else {\n      this.cdpId = typeof cdpId !== 'number' ? cdpId.id : cdpId;\n    }\n    this.cdpIdFull = cdpId;\n    this.cdp = {};\n    this.web3 = web3 || {};\n    this.ready = false;\n    this.doUpdate = 0;\n    this.cdps = [];\n    this.noProxy = sysVars.noProxy || false;\n    this.sysVars = sysVars; // todo make sure this doesn't bring in the issue with vue walking the tree and breaking things\n    this.cdpType = this.cdpId ? sysVars.cdpsWithType[this.cdpId] : defaultIlk;\n    this.services = services || null;\n    this.needsUpdate = false;\n    this.closing = false;\n    this.opening = false;\n    this.migrated = false;\n    this.migrateCdpActive = false;\n    this.migrateCdpStage = 0;\n    this.cdpTypeObject = services._mcdManager\n      ? services._mcdManager.get('mcd:cdpType').getCdpType(null, this.cdpType)\n      : services.mcdCurrencies['ETH'];\n    this._liqPrice = toBigNumber(0);\n    this.isSafe = false;\n    this._collatRatio = 0;\n    this.pethCollateral = toBigNumber(0);\n    this._usdCollateral = toBigNumber(0);\n    this._governanceFee = toBigNumber(12345);\n\n    this.tokenMapping = {};\n    for (let i = 0; i < services._typeService.cdpTypes.length; i++) {\n      this.tokenMapping[services._typeService.cdpTypes[i].currency.symbol] =\n        services._typeService.cdpTypes[i];\n      this.tokenMapping[services._typeService.cdpTypes[i].currency.name] =\n        services._typeService.cdpTypes[i];\n    }\n\n    this.override = {};\n    this.afterInitialization = false;\n  }\n\n  // Getters\n  get cdpCollateralType() {\n    return this.cdpType.replace(/-[A-Z]/, '');\n  }\n\n  get currentAddress() {\n    return this.services.address;\n  }\n\n  get currentPrice() {\n    return this.mcdCurrencies[this.cdpCollateralType].price._amount.toString();\n  }\n\n  get collatRatio() {\n    return this._collatRatio;\n  }\n\n  get collateralAmount() {\n    try {\n      return this._collateralAmount.toBigNumber();\n    } catch (e) {\n      return '--';\n    }\n  }\n\n  get _collateralAmount() {\n    if (this.override['collateralAmount']) {\n      return this.override['collateralAmount'];\n    }\n    return this.cdp.collateralAmount;\n  }\n\n  get collateralAvailable() {\n    try {\n      return this._collateralAvailable.toBigNumber();\n    } catch (e) {\n      return '--';\n    }\n  }\n\n  get _collateralAvailable() {\n    return this.cdp.collateralAvailable;\n  }\n\n  get collateralStatus() {\n    if (this._collateralizationRatio.gte(this.liquidationRatio.plus(0.5))) {\n      return 'green';\n    } else if (\n      this._collateralizationRatio.gte(this.liquidationRatio.plus(0.25)) &&\n      this._collateralizationRatio.lte(this.liquidationRatio.plus(0.5))\n    ) {\n      return 'orange';\n    }\n    return 'red';\n  }\n\n  get collateralValue() {\n    try {\n      return this._collateralValue.toBigNumber();\n    } catch (e) {\n      return '--';\n    }\n  }\n\n  get _collateralValue() {\n    return daiMath.collateralValue(\n      this._collateralAmount,\n      this.cdpTypeObject.price\n    );\n  }\n\n  get collateralizationRatio() {\n    try {\n      if (this._collateralizationRatio._amount) {\n        return this._collateralizationRatio._amount;\n      }\n      return this._collateralizationRatio.toBigNumber();\n    } catch (e) {\n      return '--';\n    }\n  }\n\n  get _collateralizationRatio() {\n    const value = daiMath.collateralizationRatio(\n      this._collateralValue,\n      this._debtValue\n    );\n    return value;\n  }\n\n  get cdpService() {\n    return this.services._cdpService;\n  }\n\n  get daiToken() {\n    return this.getTokens['DAI'];\n  }\n\n  get daiBalance() {\n    return this.services.daiBalance;\n  }\n\n  get debtValue() {\n    if (this.cdp) {\n      try {\n        if (this.override['debtValue']) {\n          return this._debtValue.toBigNumber();\n        }\n        return toBigNumber(\n          toBigNumber(this._debtValue.toBigNumber()).toFixed(18)\n        );\n      } catch (e) {\n        return '--';\n      }\n    }\n    return toBigNumber(0);\n  }\n\n  get _debtValue() {\n    if (this.cdp) {\n      if (this.override['debtValue']) {\n        return this.override['debtValue'];\n      }\n      return this.cdp.debtValue;\n    }\n    return toBigNumber(0);\n  }\n\n  get dustValues() {\n    return this.services.dustValues;\n  }\n\n  get ethPrice() {\n    return this.services.ethPrice;\n  }\n\n  get ethCollateral() {\n    try {\n      return this._ethCollateral.toBigNumber();\n    } catch (e) {\n      return '--';\n    }\n  }\n\n  get _ethCollateral() {\n    return this._collateralAmount;\n  }\n\n  getCollateralIlk() {\n    return this.cdpType;\n  }\n\n  get getTokens() {\n    return this.sysVars.tokens;\n  }\n\n  get governanceFeeOwed() {\n    return this._governanceFee;\n  }\n\n  get hasProxy() {\n    return this.services.hasProxy;\n  }\n\n  get liquidationPenalty() {\n    if (this.cdp) {\n      if (this.cdp.type) {\n        return toBigNumber(this.cdp.type.liquidationPenalty);\n      }\n    }\n    const rawType = this.mcdManager\n      .get('mcd:cdpType')\n      .getCdpType(null, this.cdpType);\n\n    return toBigNumber(rawType.liquidationPenalty);\n  }\n\n  get liquidationRatio() {\n    return toBigNumber(this._liquidationRatio._amount);\n  }\n\n  get _liquidationRatio() {\n    if (Object.keys(this.cdp).length > 0) {\n      return this.cdp.type.liquidationRatio;\n    }\n    const rawType = this.mcdManager\n      .get('mcd:cdpType')\n      .getCdpType(null, this.cdpType);\n    return rawType.liquidationRatio;\n  }\n\n  get liquidationPrice() {\n    try {\n      return this._liquidationPrice.toBigNumber();\n    } catch (e) {\n      return '--';\n    }\n  }\n\n  get _liquidationPrice() {\n    return daiMath.liquidationPrice(\n      this._collateralAmount,\n      this._debtValue,\n      this._liquidationRatio\n    );\n  }\n\n  get maxDai() {\n    if (\n      this.currentPrice &&\n      this.collateralAmount &&\n      this.liquidationRatio &&\n      this.debtValue\n    ) {\n      return maxDai(\n        this.currentPrice,\n        this.collateralAmount,\n        this.liquidationRatio.plus(0.001),\n        this.debtValue\n      );\n    }\n    return toBigNumber(0);\n  }\n\n  get maxEthDraw() {\n    return this.collateralAmount.minus(this.minSafeCollateralAmount);\n  }\n\n  get maxPethDraw() {\n    if (this.pethPrice && this.pethCollateral && this.liquidationRatio) {\n      if (this.zeroDebt) {\n        return maxPethDraw(\n          this.pethCollateral,\n          this.liquidationRatio,\n          this.debtValue,\n          this.pethPrice,\n          this.pethMin.times(0)\n        );\n      }\n      return maxPethDraw(\n        this.pethCollateral,\n        this.liquidationRatio,\n        this.debtValue,\n        this.pethPrice\n      );\n    }\n    return toBigNumber(0);\n  }\n\n  get maxDaiDraw() {\n    const tl = toBigNumber(this.currentPrice).times(\n      toBigNumber(this.collateralAmount)\n    );\n    const tr = toBigNumber(this.debtValue).times(\n      toBigNumber(this.liquidationRatio)\n    );\n    return tl.minus(tr).div(toBigNumber(this.currentPrice));\n  }\n\n  get maxUsdDraw() {\n    return this.toUSD(\n      this.collateralAmount.minus(this.minSafeCollateralAmount)\n    );\n  }\n\n  get mcdCurrencies() {\n    return this.services.mcdCurrencies;\n  }\n\n  get mkrToken() {\n    return this.services._mkrToken;\n  }\n\n  get mkrBalance() {\n    return this.services.mkrBalance;\n  }\n\n  get mcdManager() {\n    return this.services._mcdManager;\n  }\n\n  get minSafeCollateralAmount() {\n    const rawType = this.mcdManager\n      .get('mcd:cdpType')\n      .getCdpType(null, this.cdpType);\n\n    return daiMath\n      .minSafeCollateralAmount(\n        this._debtValue,\n        rawType.liquidationRatio._amount,\n        rawType.price._amount\n      )\n      .toBigNumber();\n  }\n\n  get minEth() {\n    return this.services.minEth;\n  }\n\n  get needToFinishMigrating() {\n    return this._proxyAddress && this.noProxy;\n  }\n\n  get proxyService() {\n    return this.services._proxyService;\n  }\n\n  get proxyAddress() {\n    return this.services._proxyAddress;\n  }\n\n  get proxyAllowanceDai() {\n    return this.services.proxyAllowances['DAI'];\n  }\n\n  get proxyAllowanceMkr() {\n    return this.services.proxyAllowances['MKR'];\n  }\n\n  get pethMin() {\n    return this.services.pethMin;\n  }\n\n  get pethPrice() {\n    return this.services._pethPrice;\n  }\n\n  get stabilityFee() {\n    if (this.cdp) {\n      return toBigNumber(this.sysVars.baseStabilityFee)\n        .plus(this.cdpTypeObject.annualStabilityFee)\n        .toString();\n    }\n    return toBigNumber(0);\n  }\n\n  get tokenService() {\n    return this.services._tokenService;\n  }\n\n  get wethToPethRatio() {\n    return this.services.wethToPethRatio;\n  }\n\n  get usdCollateral() {\n    return this.toUSD(this.ethCollateral);\n  }\n\n  get zeroDebt() {\n    return toBigNumber(this.debtValue).eq(0);\n  }\n\n  // Utility Helpers\n  toUSD(amount) {\n    const toUsd = toBigNumber(this.currentPrice).times(amount);\n\n    if (toUsd.lt(0)) {\n      return toBigNumber(0);\n    }\n    return toUsd.toFixed(2, BigNumber.ROUND_DOWN);\n  }\n\n  // Static Helpers\n\n  static toNumber(val) {\n    if (BigNumber.isBigNumber(val)) {\n      return val.toNumber();\n    }\n    return toBigNumber(val).toNumber();\n  }\n\n  static displayPercentValue(raw) {\n    if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\n    return raw.times(100).toString();\n  }\n\n  static displayFixedValue(raw, decimals = 3, round = true) {\n    return displayFixedValue(raw, decimals, round);\n  }\n}\n","import {\n  calcLiquidationPrice,\n  calcCollatRatio,\n  getMakerCurrencies,\n  addresses,\n  ERC20,\n  toBigNumber,\n  bnOver\n} from '../makerHelpers';\nimport { DAI } from '@makerdao/dai-plugin-mcd';\nimport ethUnit from 'ethjs-unit';\nimport MakerCdpBase from './MakerCdpBase';\nimport { getUrns } from './chainCalls';\nimport * as daiMath from './daiMath';\nimport BigNumber from 'bignumber.js';\n\nexport default class MakerCDP extends MakerCdpBase {\n  constructor(cdpId, web3, services, sysVars) {\n    super(cdpId, web3, services, sysVars);\n    this.minDai = 20.0;\n    this.DAI_NAME = 'DAI';\n  }\n\n  // Getters\n  // See MakerCdpBase\n\n  // Setup Methods =====================================================================================================\n  async init(cdpId = this.cdpId) {\n    await this.updateValues(cdpId);\n    try {\n      // TODO why is this returning undefined\n      this._governanceFee = (await this.cdp.getGovernanceFee()).toBigNumber();\n    } catch (e) {\n      this._governanceFee = false;\n    }\n    this.ready = true;\n    return this;\n  }\n\n  async updateSystemVariables(toUpdate) {\n    this.services = { ...this.services, ...toUpdate };\n  }\n\n  async updateValues(cdpId = this.cdpId) {\n    try {\n      this._proxyAddress = await this.services.getProxy();\n      this.noProxy = this._proxyAddress === null;\n      try {\n        if (this._proxyAddress) {\n          this.cdp = await this.services.getMakerCdp(cdpId, this._proxyAddress);\n        } else {\n          this.cdp = await this.services.getMakerCdp(cdpId, false);\n        }\n        this.isSafe = this.cdp.isSafe;\n        await this.getValuesFromChain();\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(e);\n      }\n    } catch (e) {\n      // eslint-disable-next-line\n      console.error(e);\n    }\n  }\n\n  async getValuesFromChain() {\n    if (!this.afterInitialization) {\n      this.afterInitialization = !this.afterInitialization;\n      return;\n    }\n\n    const urns = await getUrns(this.web3, this.cdpId, this.cdpType);\n    const value = this.cdpTypeObject.currency.wei(urns.ink);\n    if (!this.cdp.collateralAmount.toBigNumber().eq(value.toBigNumber())) {\n      this.override['collateralAmount'] = this.cdpTypeObject.currency.wei(\n        urns.ink\n      );\n    }\n\n    // todo: think about whether the type of update should be recorded and then used to determine which override to create\n    // Mostly about reducing chain calls.  if the value doesn't need a particular call. it can be skipped.\n    this.override['debtValue'] = daiMath.debtValue(\n      urns.art,\n      this.dustValues[this.cdpCollateralType].rate\n    );\n  }\n\n  async update() {\n    if (this.migrated) {\n      const currentProxy = await this.proxyService.currentProxy();\n      if (currentProxy) {\n        this.migrated = false;\n        await this.cdpService.give(this.cdpId, this._proxyAddress);\n      }\n    }\n    if (this.needsUpdate) {\n      this.opening = false;\n      this.needsUpdate = false;\n      await this.updateValues(this.cdpId);\n      this.doUpdate++;\n      return this;\n    }\n    return this;\n  }\n\n  // ====================== alphabetical (roughly) ============================\n\n  async approveProxyFor(symbol) {\n    await this.getTokens[symbol].approveUnlimited(this.proxyAddress);\n  }\n\n  async approveDai() {\n    await this.daiToken.approveUnlimited(this.proxyAddress);\n  }\n\n  async approveMkr() {\n    if (!this.proxyAddress) return;\n    await this.mkrToken.approveUnlimited(this.proxyAddress);\n  }\n\n  calcCollatRatio(ethQty, daiQty) {\n    if (ethQty <= 0 || daiQty <= 0) return toBigNumber(0);\n    const value = this.getPriceOfCurrency(this.cdpCollateralType);\n    return calcCollatRatio(value, ethQty, daiQty);\n  }\n\n  calcCollatRatioDaiChg(daiQty, changeAmountOnly = false) {\n    if (changeAmountOnly) {\n      daiQty = toBigNumber(this.debtValue).plus(toBigNumber(daiQty));\n    }\n    return toBigNumber(this.calcCollatRatio(this.collateralAmount, daiQty));\n  }\n\n  calcCollatRatioEthChg(ethQty, changeAmountOnly = false) {\n    if (changeAmountOnly) {\n      ethQty = toBigNumber(this.debtValue).plus(toBigNumber(ethQty));\n    }\n    return toBigNumber(this.calcCollatRatio(ethQty, this.debtValue));\n  }\n\n  calcLiquidationPrice(ethQty, daiQty) {\n    if (ethQty <= 0 || daiQty <= 0) return toBigNumber(0);\n    const value = this.getPriceOfCurrency(this.cdpCollateralType);\n    return calcLiquidationPrice(ethQty, daiQty, value, this.liquidationRatio);\n  }\n\n  calcLiquidationPriceDaiChg(daiQty, changeAmountOnly = false) {\n    if (changeAmountOnly) {\n      daiQty = toBigNumber(this.debtValue).plus(toBigNumber(daiQty));\n    }\n    return toBigNumber(\n      this.calcLiquidationPrice(this.collateralAmount, daiQty)\n    );\n  }\n\n  calcLiquidationPriceEthChg(ethQty, changeAmountOnly = false) {\n    if (changeAmountOnly) {\n      ethQty = toBigNumber(this.debtValue).plus(toBigNumber(ethQty));\n    }\n    return toBigNumber(this.calcLiquidationPrice(ethQty, this.debtValue));\n  }\n\n  async checkIfDestAddressHasProxy(address) {\n    await this.getProxy();\n    return await this.proxyService.getProxyAddress(address);\n  }\n\n  collateralOptions() {\n    return Object.keys(this.services.tokens).reduce((acc, entry) => {\n      acc.push({\n        symbol: entry,\n        name: this.services.tokens[entry].ilk\n      });\n      return acc;\n    }, []);\n  }\n\n  convertToTokenWei(value, decimals) {\n    const denominator = new BigNumber(10).pow(decimals);\n    return new BigNumber(value).times(denominator).toFixed(0).toString(10);\n  }\n\n  convertToTokenBase(value, decimals) {\n    const denominator = new BigNumber(10).pow(decimals);\n    return new BigNumber(value).div(denominator).toString(10);\n  }\n\n  enoughMkrToWipe(amount) {\n    return this.cdpService.enoughMkrToWipe(amount, DAI.wei);\n  }\n\n  async getProxy() {\n    this._proxyAddress = await this.services.getProxy();\n  }\n\n  async getCombinedDebtValue(proxyAddress = this._proxyAddress) {\n    return this.mcdManager.getCombinedDebtValue(proxyAddress);\n  }\n\n  getBalanceOf(currency) {\n    if (this.services.balances[currency]) {\n      return this.services.balances[currency];\n    }\n    return toBigNumber(0);\n  }\n\n  getProxyAllowancefor(currency) {\n    return this.services.proxyAllowances[currency];\n  }\n\n  async getRawProxyAllowanceforMkr() {\n    const contract = new this.web3.eth.Contract(ERC20, addresses.MCD_GOV);\n    return await contract.methods\n      .allowance(this.currentAddress, this.proxyAddress)\n      .call();\n  }\n\n  getTokenObjectFor(currency) {\n    return this.services.tokens[currency];\n  }\n\n  getCurrentPriceFor(symbol) {\n    if (!symbol) return 0;\n    return this.getPriceOfCurrency(symbol);\n  }\n\n  getEventHistory() {\n    return this.mcdManager.getEventHistory(this.cdp);\n  }\n\n  getPriceOfCurrency(type) {\n    const curr = this.mcdCurrencies[type];\n    if (curr) {\n      return curr.price._amount;\n    }\n    return 0;\n  }\n\n  async getDaiBalances() {\n    return await this.getTokens[this.DAI_NAME].balance();\n  }\n\n  hasEnough(ethQty, currency = 'ETH', balance = null) {\n    if (toBigNumber(ethQty).isNaN()) return false;\n    const _ethQty = toBigNumber(ethQty).toFixed(18);\n    if (currency === 'ETH' && balance !== null) {\n      return toBigNumber(\n        ethUnit.toWei(toBigNumber(_ethQty), 'ether').toString()\n      ).lte(balance);\n    }\n    return toBigNumber(ethUnit.toWei(_ethQty, 'ether').toString()).lte(\n      ethUnit.toWei(this.getBalanceOf(currency), 'ether')\n    );\n  }\n\n  hasEnoughAllowance(ethQty, currency = 'ETH') {\n    if (currency === 'ETH') return true;\n    const currentAllowance = this.getProxyAllowancefor(currency);\n    try {\n      const _ethQty = toBigNumber(ethQty).toFixed(18);\n      return toBigNumber(currentAllowance.toString()).gte(\n        toBigNumber(this.convertToTokenWei(_ethQty, 18).toString())\n      );\n    } catch (e) {\n      // eslint-disable-next-line\n      console.error(e);\n    }\n    // todo This is a temp solution\n    return toBigNumber(currentAllowance).gte(toBigNumber(10));\n  }\n\n  minDeposit(\n    daiQty = this.minDai,\n    ethPrice = this.currentPrice,\n    liquidationRatio = this.liquidationRatio\n  ) {\n    if (daiQty <= 0) daiQty = this.minDai;\n    return bnOver(liquidationRatio, daiQty, ethPrice);\n  }\n\n  minDepositFor(symbol) {\n    return this.minDeposit(this.minDai * 1.04, this.getCurrentPriceFor(symbol));\n  }\n\n  minInSelectedCurrency(symbol) {\n    const minEth = toBigNumber(this.pethMin).times(this.wethToPethRatio);\n    return toBigNumber(minEth)\n      .times(this.getCurrentPriceFor('ETH'))\n      .div(this.getCurrentPriceFor(symbol));\n  }\n\n  setType(type) {\n    if (this.cdpId === null) {\n      this.cdpTypeObject = this.mcdManager\n        .get('mcd:cdpType')\n        .getCdpType(null, type.name);\n    }\n  }\n\n  toPeth(eth) {\n    return this.services.toPeth(eth);\n  }\n\n  // ***********************************************************************************************\n  // Interaction / Operation methods\n  // ***********************************************************************************************\n  async migrateCdp() {\n    const currentProxy = await this.getProxy();\n    if (!currentProxy) {\n      this.needsUpdate = true;\n      return await this.proxyService.ensureProxy();\n    } else if (this.needToFinishMigrating) {\n      this.needsUpdate = true;\n      await this.cdpService.give(this.cdpId, this._proxyAddress);\n    }\n  }\n\n  async openCdp(type, ethQty, daiQty) {\n    if (ethQty <= 0) return 0;\n    this.opening = true;\n    this.needsUpdate = true;\n    // TODO structure to accept multiple currencies\n\n    const newCdp = await this.mcdManager.openLockAndDraw(\n      type.ilk,\n      getMakerCurrencies()[type.currency.symbol](ethQty),\n      DAI(daiQty)\n    );\n    return newCdp.id;\n  }\n\n  async lockEth(amount) {\n    try {\n      if (this.noProxy) {\n        return;\n      }\n      const owner = await this.mcdManager.getOwner(this.cdpId);\n      this.needsUpdate = true;\n      await this.mcdManager.lock(\n        this.cdpId,\n        this.cdpType,\n        this.mcdCurrencies[this.cdpCollateralType].currency(amount),\n        owner\n      );\n    } catch (e) {\n      // eslint-disable-next-line\n      console.error(e);\n    }\n  }\n\n  async drawDai(amount, acknowledgeBypass = false) {\n    if (\n      this.calcCollatRatio(\n        this.collateralAmount,\n        this.debtValue.plus(amount)\n      ).gt(2) ||\n      acknowledgeBypass\n    ) {\n      try {\n        if (this.noProxy) {\n          return;\n        }\n        this.needsUpdate = true;\n        await this.cdp.drawDai(DAI(amount));\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(e);\n      }\n    }\n  }\n\n  // This should also have a acknowledgeBypass\n  async freeEth(amount, acknowledgeBypass = false) {\n    if (\n      this.debtValue.eq(0) ||\n      this.calcCollatRatio(this.ethCollateral.minus(amount), this.debtValue).gt(\n        1.5\n      ) ||\n      acknowledgeBypass\n    ) {\n      try {\n        if (this.noProxy) {\n          return;\n        }\n        this.needsUpdate = true;\n        await this.cdp.freeCollateral(amount.toString());\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(e);\n      }\n    }\n  }\n\n  async wipeDai(amount, max = false) {\n    try {\n      if (this.noProxy) {\n        return;\n      }\n      this.needsUpdate = true;\n      if (max) {\n        await this.cdp.wipeAll();\n      } else {\n        await this.cdp.wipeDai(amount.toString());\n      }\n    } catch (e) {\n      // eslint-disable-next-line\n      console.error(e);\n    }\n  }\n\n  async canCloseCdp() {\n    const value = this.debtValue.toNumber();\n    return await this.cdpService.enoughMkrToWipe(this.cdpId, value);\n  }\n\n  async closeCdp() {\n    try {\n      this.needsUpdate = true;\n      this.closing = true;\n\n      if (this.hasProxy) {\n        await this.cdpService.shutProxy(this._proxyAddress, this.cdpId);\n      }\n    } catch (e) {\n      // eslint-disable-next-line\n      console.log('closeCdp Error:');\n      // eslint-disable-next-line\n      console.error(e);\n    }\n    // }\n  }\n\n  async moveCdp(address) {\n    await this.getProxy();\n    const proxy = await this.proxyService.getProxyAddress(address);\n    if (proxy) {\n      this.needsUpdate = true;\n      this.closing = true; // for the purpose of displaying to the user closing and moving are the same\n      await this.cdp.giveToProxy(address);\n      // eslint-disable-next-line\n    } else if (!this.noProxy && proxy) {\n      this.needsUpdate = true;\n      this.closing = true;\n      await this.cdp.giveToProxy(address);\n    } else if (!this.noProxy) {\n      this.needsUpdate = true;\n      this.closing = true;\n      await this.cdp.give(address);\n    } else {\n      this.needsUpdate = true;\n      this.closing = true;\n      await this.cdp.give(address);\n    }\n  }\n}\n","import MakerCDP from '@/dapps/MakerDai/MakerCDP/MakerCDP';\n\nexport default MakerCDP;\n","import BigNumber from 'bignumber.js';\nimport { DAI } from '@makerdao/dai-plugin-mcd';\nimport { locateCdps } from './locateCdps';\nimport MakerCDP from '../MakerCDP';\nimport { getDustValue } from '@/dapps/MakerDai/MakerCDP/chainCalls';\nconst toBigNumber = num => {\n  return new BigNumber(num);\n};\n\nconst ServiceRoles = {\n  PRICE: 'price',\n  CDP: 'cdp',\n  PROXY: 'proxy',\n  TOKEN: 'token',\n  CDP_MANAGER: 'mcd:cdpManager',\n  CDP_TYPE: 'mcd:cdpType',\n  AUCTION: 'mcd:auction',\n  SYSTEM_DATA: 'mcd:systemData',\n  QUERY_API: 'mcd:queryApi',\n  SAVINGS: 'mcd:savings'\n};\n\nexport async function setupServices(self, maker) {\n  const result = await Promise.all([\n    maker.service(ServiceRoles.SYSTEM_DATA),\n    maker.service(ServiceRoles.PROXY),\n    maker.service(ServiceRoles.TOKEN)\n  ]);\n  self._systemData = result[0];\n  self._proxyService = result[1];\n  self._tokenService = result[2];\n  self._mcdManager = maker.service(ServiceRoles.CDP_MANAGER);\n  self._mcdSaving = maker.service(ServiceRoles.SAVINGS);\n  self._typeService = maker.service(ServiceRoles.CDP_TYPE);\n  return self;\n}\n\nexport async function setupPriceAndRatios(self, _priceService, _typeService) {\n  self.pethMin = toBigNumber(0.005);\n\n  const result = await Promise.all([self._systemData.getAnnualBaseRate()]);\n  self.ethPrice = toBigNumber(_typeService.getCdpType(null, 'ETH-A'));\n  self.liquidationRatio = toBigNumber(\n    _typeService.getCdpType(null, 'ETH-A').liquidationRatio\n  );\n  self.liquidationPenalty = toBigNumber(_typeService.liquidationPenalty);\n  self.stabilityFee = toBigNumber(\n    _typeService.getCdpType(null, 'ETH-A').annualStabilityFee\n  ).plus(result[0]);\n  self.baseStabilityFee = toBigNumber(result[0]);\n  return self;\n}\n\nexport async function getDetailsForTokens(self, collateralTokens) {\n  self.balances = {};\n  self.tokens = {};\n\n  for (let i = 0; i < collateralTokens.length; i++) {\n    const token = self._tokenService.getToken(collateralTokens[i].currency);\n    self.tokens[collateralTokens[i].currency.symbol] = token;\n    token.balance().then(res => {\n      self.balances[collateralTokens[i].currency.symbol] = res.toBigNumber();\n    });\n  }\n  const token = self._tokenService.getToken(DAI);\n  self.tokens[token.symbol] = token;\n  self.balances[token.symbol] = (await token.balance()).toBigNumber();\n\n  await getDustValues(self, collateralTokens);\n}\n\nexport async function getDustValues(self, collateralTokens) {\n  self.dustValues = {};\n  for (let i = 0; i < collateralTokens.length; i++) {\n    getDustValue(self.web3, collateralTokens[i].ilk).then(res => {\n      self.dustValues[collateralTokens[i].currency.symbol] = res;\n    });\n  }\n}\n\nexport async function checkAllowances(self, address, proxyAddress) {\n  self.proxyAllowances = {};\n  if (proxyAddress) {\n    const keys = Object.keys(self.tokens);\n    keys.push('MKR');\n    keys.push('DAI');\n    for (let i = 0; i < keys.length; i++) {\n      try {\n        if (\n          typeof self.tokens[keys[i]] !== 'undefined' &&\n          typeof self.tokens[keys[i]]._contract !== 'undefined' &&\n          typeof self.tokens[keys[i]]._contract.allowance === 'function'\n        ) {\n          self.tokens[keys[i]]._contract\n            .allowance(address, proxyAddress)\n            .then(res => {\n              self.proxyAllowances[keys[i]] = toBigNumber(res);\n            });\n        } else {\n          self.proxyAllowances[keys[i]] = toBigNumber(0);\n        }\n\n        if (self.proxyAllowances[keys[i]].isNaN()) {\n          self.proxyAllowances[keys[i]] = toBigNumber(0);\n        }\n      } catch (e) {\n        self.proxyAllowances[keys[i]] = toBigNumber(0);\n      }\n    }\n  }\n  return self.proxyAllowances;\n}\n\nexport async function checkAllowanceFor(\n  proxyAllowances,\n  tokens,\n  address,\n  proxyAddress,\n  currency\n) {\n  if (proxyAddress) {\n    proxyAllowances[currency] = toBigNumber(\n      await tokens[currency].allowance(address, proxyAddress)\n    );\n  }\n  return proxyAllowances;\n}\n\nexport function collateralOptions(mcdCurrencies) {\n  return Object.keys(mcdCurrencies).reduce((acc, entry) => {\n    acc.push({\n      symbol: entry,\n      name: mcdCurrencies[entry].ilk\n    });\n    return acc;\n  }, []);\n}\n\n// setup MakerCDP\n\nexport async function setupCdpManage(self, cdpId) {\n  if (!self.allCdpIds.includes(cdpId) && self.allCdpIds.length > 0) {\n    cdpId = self.allCdpIds[0];\n  }\n  if (self.allCdpIds.length === 0) {\n    self.activeValues = self.systemValues;\n  } else {\n    self.currentCdpId = cdpId;\n    self.activeValues = await getValuesForManage.bind(self)(cdpId);\n  }\n  return self;\n}\n\nexport async function getValuesForManage(cdpId) {\n  if (typeof cdpId !== 'number') cdpId = cdpId.id;\n  const currentCdp = this.activeCdps[cdpId];\n  this.currentCdp = currentCdp;\n  const systemValues = this.systemValues;\n  return {\n    ...systemValues,\n    cdpId: cdpId,\n    maxEthDraw: currentCdp.maxEthDraw,\n    maxUsdDraw: currentCdp.maxUsdDraw,\n    ethCollateral: currentCdp.ethCollateral,\n    usdCollateral: currentCdp.usdCollateral,\n    debtValue: currentCdp.debtValue,\n    maxDai: currentCdp.maxDai,\n    collateralRatio: currentCdp.collatRatio,\n    liquidationPrice: currentCdp.liquidationPrice,\n    minEth: currentCdp.minEth,\n    isSafe: false,\n    governanceFeeOwed: currentCdp.governanceFeeOwed,\n    ethCollateralNum: currentCdp.ethCollateral,\n    zeroDebt: currentCdp.zeroDebt,\n    cdpsWithType: this.cdpsWithType,\n    // _systemData: this._systemData,\n    baseStabilityFee: this.baseStabilityFee\n  };\n}\n\nexport async function loadCdpDetails(\n  self,\n  cdps = self.cdps,\n  cdpsWithoutProxy = self.cdpsWithoutProxy\n) {\n  for (let i = 0; i < cdps.length; i++) {\n    const cdpId = typeof cdps[i] !== 'number' ? cdps[i].id : cdps[i];\n    self.activeCdps[cdpId] = await buildCdpObject.bind(self)(cdpId);\n  }\n  for (let i = 0; i < cdpsWithoutProxy.length; i++) {\n    const cdpId =\n      typeof cdpsWithoutProxy[i] !== 'number'\n        ? cdpsWithoutProxy[i].id\n        : cdpsWithoutProxy[i];\n    self.activeCdps[cdpId] = await buildCdpObject.bind(self)(cdpId, {\n      noProxy: true\n    });\n  }\n}\n\nexport async function loadCdpDetail(self, cdpId) {\n  return await buildCdpObject.bind(self)(cdpId);\n}\n\nexport async function updateActiveCdp(self) {\n  const removeObject = val => {\n    return typeof val === 'number'\n      ? val\n      : typeof val === 'object'\n      ? val.hasOwnProperty('id')\n        ? val.id\n        : 0\n      : val;\n  };\n  const currentCdpIds = Object.keys(self.activeCdps);\n  const { withType, withProxy, withoutProxy } = await locateCdps(\n    self,\n    self._mcdManager\n  );\n\n  self.cdpsWithType = withType;\n  self.cdps = withProxy.map(removeObject);\n  self.cdpsWithoutProxy = withoutProxy;\n\n  const newCdps = self.cdps.filter(item => {\n    return !currentCdpIds.includes(item.toString());\n  });\n  const newCdpsWithoutProxy = self.cdpsWithoutProxy.filter(\n    item => !Object.keys(self.activeCdps).includes(item)\n  );\n\n  const removedCdps = currentCdpIds.filter(item => {\n    return !(\n      self.cdps.includes(item.toString()) ||\n      self.cdps.includes(parseInt(item)) ||\n      self.cdpsWithoutProxy.includes(item.toString()) ||\n      self.cdpsWithoutProxy.includes(parseInt(item))\n    );\n  });\n\n  if (removedCdps.length > 0) {\n    removedCdps.forEach(item => delete self.activeCdps[item]);\n  }\n\n  if (newCdps.length > 0) {\n    for (let i = 0; i < newCdps.length; i++) {\n      self.activeCdps[newCdps[i]] = await buildCdpObject.bind(self)(newCdps[i]);\n    }\n  }\n\n  if (newCdpsWithoutProxy.length > 0) {\n    for (let i = 0; i < newCdpsWithoutProxy.length; i++) {\n      self.activeCdps[newCdpsWithoutProxy[i]] = await buildCdpObject.bind(self)(\n        newCdpsWithoutProxy[i],\n        {\n          noProxy: true\n        }\n      );\n    }\n  }\n}\n\nexport async function buildEmpty(self) {\n  const result = await buildCdpObject.bind(self)(null);\n  return result;\n}\n\nexport async function buildCdpObject(cdpId, options = {}, useOld = false) {\n  const sysVars = {\n    ...options,\n    tokens: this.tokens,\n    balances: this.balances,\n    _proxyAddress: this.proxyAddress,\n    liquidationPenalty: this.liquidationPenalty,\n    stabilityFee: this.stabilityFee,\n    ethPrice: this.ethPrice,\n    _targetPrice: this._targetPrice,\n    liquidationRatio: this.liquidationRatio,\n    proxyAllowances: this.proxyAllowances,\n    _daiToken: this._daiToken,\n    daiBalance: this.daiBalance,\n    _mkrToken: this._mkrToken,\n    mkrBalance: this.mkrBalance,\n    minEth: this.minEth,\n    cdpsWithType: this.cdpsWithType,\n    baseStabilityFee: this.baseStabilityFee\n  };\n\n  const services = {\n    address: this.account.address,\n    _typeService: this._typeService,\n    _mcdManager: this._mcdManager,\n    _mcdSaving: this._mcdSaving,\n    _proxyService: this._proxyService,\n    priceService: this.priceService,\n    _cdpService: this._cdpService,\n    _tokenService: this._tokenService,\n    doUpdate: this.doUpdate,\n    getProxy: this.getProxy,\n    hasProxy: this.hasProxy,\n    getMakerCdp: this.getMakerCdp,\n    toUSD: this.toUSD,\n    _proxyAddress: this.proxyAddress,\n    liquidationPenalty: this.liquidationPenalty,\n    stabilityFee: this.stabilityFee,\n    ethPrice: this.ethPrice,\n    _targetPrice: this._targetPrice,\n    liquidationRatio: this.liquidationRatio,\n    _daiToken: this._daiToken,\n    daiBalance: this.daiBalance,\n    _mkrToken: this._mkrToken,\n    mkrBalance: this.mkrBalance,\n    minEth: this.minEth,\n    tokens: this.tokens,\n    balances: this.balances,\n    proxyAllowances: this.proxyAllowances,\n    mcdCurrencies: this.mcdCurrencies,\n    dustValues: this.dustValues,\n    _systemData: this._systemData\n  };\n  let makerCDP;\n  try {\n    makerCDP = new MakerCDP(cdpId, this.web3, services, sysVars);\n    if (cdpId) {\n      if (useOld) {\n        return await makerCDP.init(cdpId, useOld);\n      }\n      return await makerCDP.init(cdpId);\n    }\n    return makerCDP;\n  } catch (e) {\n    // eslint-disable-next-line\n    console.log(e);\n    return makerCDP;\n  }\n}\n\nexport async function doUpdate(self, Toast) {\n  self.proxyAddress = await self.getProxy();\n  let afterClose = false;\n  const afterOpen = self.$route.name === 'create';\n  await Promise.all([\n    self.updateActiveCdp(),\n    self.checkBalances(),\n    self.checkAllowances()\n  ]);\n  for (const idProp in self.activeCdps) {\n    if (self.activeCdps[idProp].needsUpdate) {\n      if (self.activeCdps[idProp].closing) {\n        afterClose = true;\n        delete self.activeCdps[idProp];\n        self.cdps = self.cdps.filter(item => item !== idProp);\n        self.cdpsWithoutProxy = self.cdpsWithoutProxy.filter(\n          item => item !== idProp\n        );\n      } else if (self.activeCdps[idProp].opening) {\n        await self.activeCdps[idProp].updateValues();\n      } else {\n        self.activeCdps[idProp] = await self.activeCdps[idProp].update();\n        self.activeCdps[idProp].updateSystemVariables({\n          tokens: self.tokens,\n          balances: self.balances,\n          proxyAllowances: self.proxyAllowances,\n          dustValues: self.dustValues\n        });\n      }\n    }\n    if (idProp === self.currentCdpId) {\n      await self.currentCdp.update();\n      await self.setupCdpManage(self.currentCdpId);\n    }\n  }\n\n  if (\n    Object.keys(self.activeCdps).includes(self.currentCdpId.toString()) ||\n    Object.keys(self.activeCdps).includes(self.currentCdpId)\n  ) {\n    await self.setupCdpManageFunc(self.currentCdpId);\n  } else {\n    await self.loadCdpDetails(); //todo: see if disableing this breaks anything (likely would happen with creation)\n    // todo: thie line above is where things were getting erased (new instances are being created)\n    await self.setupCdpManageFunc(self.currentCdpId);\n  }\n\n  const runAfterUpdate = () => {\n    if (self.afterUpdate.length > 0) {\n      const fn = self.afterUpdate.pop();\n      fn();\n      runAfterUpdate();\n    }\n  };\n  runAfterUpdate();\n  if (afterClose || afterOpen || self.creatingCdp) {\n    if (self.cdps.length > 0 || self.cdpsWithoutProxy.length > 0) {\n      self.goToManage();\n    } else if (self.$route.name === 'save') {\n      self.goToSave();\n    } else {\n      self.gotoCreate();\n    }\n  }\n  if (self.creatingCdp) {\n    self.creatingCdp = false;\n    await self.updateActiveCdp();\n    Toast.responseHandler(self.$t('dappsMCDMaker.vault-created'), Toast.INFO);\n  } else {\n    self.valuesUpdated++;\n    Toast.responseHandler(self.$t('dappsMCDMaker.vault-updated'), Toast.INFO);\n  }\n}\n","import Maker from '@makerdao/dai';\n\nimport * as TKNS from '@makerdao/dai-plugin-mcd';\n\nconst { DAI } = Maker;\n\nexport function getMakerCurrencies() {\n  const vals = { DAI, ...TKNS };\n  return vals;\n}\n","export default [\n  {\n    constant: true,\n    inputs: [],\n    name: 'saiJoin',\n    outputs: [{ internalType: 'contract JoinLike', name: '', type: 'address' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'wethJoin',\n    outputs: [{ internalType: 'contract JoinLike', name: '', type: 'address' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'tub',\n    outputs: [\n      { internalType: 'contract SaiTubLike', name: '', type: 'address' }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'vat',\n    outputs: [{ internalType: 'contract VatLike', name: '', type: 'address' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'cdpManager',\n    outputs: [\n      { internalType: 'contract ManagerLike', name: '', type: 'address' }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'daiJoin',\n    outputs: [{ internalType: 'contract JoinLike', name: '', type: 'address' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'uint256', name: 'wad', type: 'uint256' }],\n    name: 'swapDaiToSai',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'bytes32', name: 'cup', type: 'bytes32' }],\n    name: 'migrate',\n    outputs: [{ internalType: 'uint256', name: 'cdp', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'uint256', name: 'wad', type: 'uint256' }],\n    name: 'swapSaiToDai',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'tub_',\n        type: 'address'\n      },\n      {\n        internalType: 'address',\n        name: 'cdpManager_',\n        type: 'address'\n      },\n      { internalType: 'address', name: 'saiJoin_', type: 'address' },\n      {\n        internalType: 'address',\n        name: 'wethJoin_',\n        type: 'address'\n      },\n      { internalType: 'address', name: 'daiJoin_', type: 'address' }\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'constructor'\n  }\n];\n","const ERC20 = [\n  {\n    constant: true,\n    inputs: [],\n    name: 'name',\n    outputs: [\n      {\n        name: '',\n        type: 'string'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_spender',\n        type: 'address'\n      },\n      {\n        name: '_value',\n        type: 'uint256'\n      }\n    ],\n    name: 'approve',\n    outputs: [\n      {\n        name: '',\n        type: 'bool'\n      }\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_from',\n        type: 'address'\n      },\n      {\n        name: '_to',\n        type: 'address'\n      },\n      {\n        name: '_value',\n        type: 'uint256'\n      }\n    ],\n    name: 'transferFrom',\n    outputs: [\n      {\n        name: '',\n        type: 'bool'\n      }\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'decimals',\n    outputs: [\n      {\n        name: '',\n        type: 'uint8'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_owner',\n        type: 'address'\n      }\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'symbol',\n    outputs: [\n      {\n        name: '',\n        type: 'string'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_to',\n        type: 'address'\n      },\n      {\n        name: '_value',\n        type: 'uint256'\n      }\n    ],\n    name: 'transfer',\n    outputs: [\n      {\n        name: '',\n        type: 'bool'\n      }\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_owner',\n        type: 'address'\n      },\n      {\n        name: '_spender',\n        type: 'address'\n      }\n    ],\n    name: 'allowance',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'constructor'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: '_from',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        name: '_to',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        name: '_value',\n        type: 'uint256'\n      }\n    ],\n    name: 'Transfer',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: '_owner',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        name: '_spender',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        name: '_value',\n        type: 'uint256'\n      }\n    ],\n    name: 'Approval',\n    type: 'event'\n  }\n];\n\nexport default ERC20;\n","export default [\n  {\n    constant: true,\n    inputs: [\n      { internalType: 'address', name: 'manager', type: 'address' },\n      {\n        internalType: 'address',\n        name: 'guy',\n        type: 'address'\n      }\n    ],\n    name: 'getCdpsAsc',\n    outputs: [\n      { internalType: 'uint256[]', name: 'ids', type: 'uint256[]' },\n      {\n        internalType: 'address[]',\n        name: 'urns',\n        type: 'address[]'\n      },\n      { internalType: 'bytes32[]', name: 'ilks', type: 'bytes32[]' }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      { internalType: 'address', name: 'manager', type: 'address' },\n      {\n        internalType: 'address',\n        name: 'guy',\n        type: 'address'\n      }\n    ],\n    name: 'getCdpsDesc',\n    outputs: [\n      { internalType: 'uint256[]', name: 'ids', type: 'uint256[]' },\n      {\n        internalType: 'address[]',\n        name: 'urns',\n        type: 'address[]'\n      },\n      { internalType: 'bytes32[]', name: 'ilks', type: 'bytes32[]' }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  }\n];\n","export default [\n  {\n    constant: false,\n    inputs: [],\n    name: 'build',\n    outputs: [\n      { internalType: 'address payable', name: 'proxy', type: 'address' }\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'proxies',\n    outputs: [{ internalType: 'contract DSProxy', name: '', type: 'address' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],\n    name: 'build',\n    outputs: [\n      { internalType: 'address payable', name: 'proxy', type: 'address' }\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'factory_', type: 'address' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'constructor'\n  }\n];\n","export default [\n  {\n    constant: true,\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'count',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'uint256', name: 'cdp', type: 'uint256' },\n      {\n        internalType: 'address',\n        name: 'usr',\n        type: 'address'\n      },\n      { internalType: 'uint256', name: 'ok', type: 'uint256' }\n    ],\n    name: 'cdpAllow',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'bytes32', name: 'ilk', type: 'bytes32' },\n      {\n        internalType: 'uint256',\n        name: 'cdp',\n        type: 'uint256'\n      },\n      { internalType: 'address', name: 'dst', type: 'address' },\n      {\n        internalType: 'uint256',\n        name: 'wad',\n        type: 'uint256'\n      }\n    ],\n    name: 'flux',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'uint256', name: 'cdp', type: 'uint256' },\n      {\n        internalType: 'address',\n        name: 'dst',\n        type: 'address'\n      }\n    ],\n    name: 'quit',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    name: 'urns',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    name: 'ilks',\n    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'vat',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'uint256', name: 'cdp', type: 'uint256' },\n      {\n        internalType: 'int256',\n        name: 'dink',\n        type: 'int256'\n      },\n      { internalType: 'int256', name: 'dart', type: 'int256' }\n    ],\n    name: 'frob',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'uint256', name: 'cdp', type: 'uint256' },\n      {\n        internalType: 'address',\n        name: 'dst',\n        type: 'address'\n      },\n      { internalType: 'int256', name: 'dink', type: 'int256' },\n      {\n        internalType: 'int256',\n        name: 'dart',\n        type: 'int256'\n      }\n    ],\n    name: 'frob',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      { internalType: 'address', name: '', type: 'address' },\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      },\n      { internalType: 'address', name: '', type: 'address' }\n    ],\n    name: 'cdpCan',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'bytes32', name: 'ilk', type: 'bytes32' },\n      {\n        internalType: 'address',\n        name: 'usr',\n        type: 'address'\n      }\n    ],\n    name: 'open',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'address', name: 'src', type: 'address' },\n      {\n        internalType: 'uint256',\n        name: 'cdp',\n        type: 'uint256'\n      }\n    ],\n    name: 'enter',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    name: 'list',\n    outputs: [\n      { internalType: 'uint256', name: 'prev', type: 'uint256' },\n      {\n        internalType: 'uint256',\n        name: 'next',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    name: 'owns',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'last',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'uint256', name: 'cdp', type: 'uint256' },\n      {\n        internalType: 'address',\n        name: 'dst',\n        type: 'address'\n      },\n      { internalType: 'uint256', name: 'wad', type: 'uint256' }\n    ],\n    name: 'flux',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      { internalType: 'address', name: '', type: 'address' },\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }\n    ],\n    name: 'urnCan',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'cdpi',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'address', name: 'usr', type: 'address' },\n      {\n        internalType: 'uint256',\n        name: 'ok',\n        type: 'uint256'\n      }\n    ],\n    name: 'urnAllow',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'bytes32', name: 'ilk', type: 'bytes32' }],\n    name: 'open',\n    outputs: [{ internalType: 'uint256', name: 'cdp', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'uint256', name: 'cdpSrc', type: 'uint256' },\n      {\n        internalType: 'uint256',\n        name: 'cdpDst',\n        type: 'uint256'\n      }\n    ],\n    name: 'shift',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'uint256', name: 'cdp', type: 'uint256' },\n      {\n        internalType: 'address',\n        name: 'dst',\n        type: 'address'\n      },\n      { internalType: 'uint256', name: 'rad', type: 'uint256' }\n    ],\n    name: 'move',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'first',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'uint256', name: 'cdp', type: 'uint256' },\n      {\n        internalType: 'address',\n        name: 'dst',\n        type: 'address'\n      }\n    ],\n    name: 'give',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'vat_', type: 'address' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'constructor'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'usr', type: 'address' },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'own',\n        type: 'address'\n      },\n      { indexed: false, internalType: 'uint256', name: 'cdp', type: 'uint256' }\n    ],\n    name: 'NewCdp',\n    type: 'event'\n  },\n  {\n    anonymous: true,\n    inputs: [\n      { indexed: true, internalType: 'bytes4', name: 'sig', type: 'bytes4' },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'usr',\n        type: 'address'\n      },\n      { indexed: true, internalType: 'bytes32', name: 'arg1', type: 'bytes32' },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'arg2',\n        type: 'bytes32'\n      },\n      { indexed: false, internalType: 'bytes', name: 'data', type: 'bytes' }\n    ],\n    name: 'LogNote',\n    type: 'event'\n  }\n];\n","export default [\n  {\n    inputs: [{ internalType: 'address', name: 'vat_', type: 'address' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'constructor'\n  },\n  {\n    anonymous: true,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes4',\n        name: 'sig',\n        type: 'bytes4'\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'usr',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'arg1',\n        type: 'bytes32'\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'arg2',\n        type: 'bytes32'\n      },\n      { indexed: false, internalType: 'bytes', name: 'data', type: 'bytes' }\n    ],\n    name: 'LogNote',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'bytes32',\n        name: 'ilk',\n        type: 'bytes32'\n      },\n      {\n        indexed: false,\n        internalType: 'bytes32',\n        name: 'val',\n        type: 'bytes32'\n      },\n      { indexed: false, internalType: 'uint256', name: 'spot', type: 'uint256' }\n    ],\n    name: 'Poke',\n    type: 'event'\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: 'cage',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'address', name: 'guy', type: 'address' }],\n    name: 'deny',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'ilk',\n        type: 'bytes32'\n      },\n      { internalType: 'bytes32', name: 'what', type: 'bytes32' },\n      {\n        internalType: 'uint256',\n        name: 'data',\n        type: 'uint256'\n      }\n    ],\n    name: 'file',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'what',\n        type: 'bytes32'\n      },\n      { internalType: 'uint256', name: 'data', type: 'uint256' }\n    ],\n    name: 'file',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'ilk',\n        type: 'bytes32'\n      },\n      { internalType: 'bytes32', name: 'what', type: 'bytes32' },\n      {\n        internalType: 'address',\n        name: 'pip_',\n        type: 'address'\n      }\n    ],\n    name: 'file',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n    name: 'ilks',\n    outputs: [\n      {\n        internalType: 'contract PipLike',\n        name: 'pip',\n        type: 'address'\n      },\n      { internalType: 'uint256', name: 'mat', type: 'uint256' }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'live',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'par',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'bytes32', name: 'ilk', type: 'bytes32' }],\n    name: 'poke',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'address', name: 'guy', type: 'address' }],\n    name: 'rely',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'vat',\n    outputs: [{ internalType: 'contract VatLike', name: '', type: 'address' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'wards',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  }\n];\n","export default [\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'constructor'\n  },\n  {\n    anonymous: true,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes4',\n        name: 'sig',\n        type: 'bytes4'\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'arg1',\n        type: 'bytes32'\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'arg2',\n        type: 'bytes32'\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'arg3',\n        type: 'bytes32'\n      },\n      { indexed: false, internalType: 'bytes', name: 'data', type: 'bytes' }\n    ],\n    name: 'LogNote',\n    type: 'event'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'Line',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: 'cage',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      { internalType: 'address', name: '', type: 'address' },\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }\n    ],\n    name: 'can',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'dai',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'debt',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'address', name: 'usr', type: 'address' }],\n    name: 'deny',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'ilk',\n        type: 'bytes32'\n      },\n      { internalType: 'bytes32', name: 'what', type: 'bytes32' },\n      {\n        internalType: 'uint256',\n        name: 'data',\n        type: 'uint256'\n      }\n    ],\n    name: 'file',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'what',\n        type: 'bytes32'\n      },\n      { internalType: 'uint256', name: 'data', type: 'uint256' }\n    ],\n    name: 'file',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'ilk',\n        type: 'bytes32'\n      },\n      { internalType: 'address', name: 'src', type: 'address' },\n      {\n        internalType: 'address',\n        name: 'dst',\n        type: 'address'\n      },\n      { internalType: 'uint256', name: 'wad', type: 'uint256' }\n    ],\n    name: 'flux',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'i',\n        type: 'bytes32'\n      },\n      { internalType: 'address', name: 'u', type: 'address' },\n      {\n        internalType: 'int256',\n        name: 'rate',\n        type: 'int256'\n      }\n    ],\n    name: 'fold',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'ilk',\n        type: 'bytes32'\n      },\n      { internalType: 'address', name: 'src', type: 'address' },\n      {\n        internalType: 'address',\n        name: 'dst',\n        type: 'address'\n      },\n      { internalType: 'int256', name: 'dink', type: 'int256' },\n      {\n        internalType: 'int256',\n        name: 'dart',\n        type: 'int256'\n      }\n    ],\n    name: 'fork',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'i',\n        type: 'bytes32'\n      },\n      { internalType: 'address', name: 'u', type: 'address' },\n      {\n        internalType: 'address',\n        name: 'v',\n        type: 'address'\n      },\n      { internalType: 'address', name: 'w', type: 'address' },\n      {\n        internalType: 'int256',\n        name: 'dink',\n        type: 'int256'\n      },\n      { internalType: 'int256', name: 'dart', type: 'int256' }\n    ],\n    name: 'frob',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      { internalType: 'bytes32', name: '', type: 'bytes32' },\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }\n    ],\n    name: 'gem',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'i',\n        type: 'bytes32'\n      },\n      { internalType: 'address', name: 'u', type: 'address' },\n      {\n        internalType: 'address',\n        name: 'v',\n        type: 'address'\n      },\n      { internalType: 'address', name: 'w', type: 'address' },\n      {\n        internalType: 'int256',\n        name: 'dink',\n        type: 'int256'\n      },\n      { internalType: 'int256', name: 'dart', type: 'int256' }\n    ],\n    name: 'grab',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'uint256', name: 'rad', type: 'uint256' }],\n    name: 'heal',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'address', name: 'usr', type: 'address' }],\n    name: 'hope',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n    name: 'ilks',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'Art',\n        type: 'uint256'\n      },\n      { internalType: 'uint256', name: 'rate', type: 'uint256' },\n      {\n        internalType: 'uint256',\n        name: 'spot',\n        type: 'uint256'\n      },\n      { internalType: 'uint256', name: 'line', type: 'uint256' },\n      {\n        internalType: 'uint256',\n        name: 'dust',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'bytes32', name: 'ilk', type: 'bytes32' }],\n    name: 'init',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'live',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'src',\n        type: 'address'\n      },\n      { internalType: 'address', name: 'dst', type: 'address' },\n      {\n        internalType: 'uint256',\n        name: 'rad',\n        type: 'uint256'\n      }\n    ],\n    name: 'move',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'address', name: 'usr', type: 'address' }],\n    name: 'nope',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'address', name: 'usr', type: 'address' }],\n    name: 'rely',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'sin',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'ilk',\n        type: 'bytes32'\n      },\n      { internalType: 'address', name: 'usr', type: 'address' },\n      {\n        internalType: 'int256',\n        name: 'wad',\n        type: 'int256'\n      }\n    ],\n    name: 'slip',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'u',\n        type: 'address'\n      },\n      { internalType: 'address', name: 'v', type: 'address' },\n      {\n        internalType: 'uint256',\n        name: 'rad',\n        type: 'uint256'\n      }\n    ],\n    name: 'suck',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      { internalType: 'bytes32', name: '', type: 'bytes32' },\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }\n    ],\n    name: 'urns',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'ink',\n        type: 'uint256'\n      },\n      { internalType: 'uint256', name: 'art', type: 'uint256' }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'vice',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'wards',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  }\n];\n","import BigNumber from 'bignumber.js';\nimport { ERC20 } from './ABIs';\n\nexport function toBigNumber(num) {\n  const bignumber = new BigNumber(num);\n  bignumber.displayFixed = displayFixedValue.bind(this, bignumber);\n  return new BigNumber(num);\n}\n\nexport function toNumber(val) {\n  if (BigNumber.isBigNumber(val)) {\n    return val.toNumber();\n  }\n  return toBigNumber(val).toNumber();\n}\n\nexport function displayPercentValue(raw) {\n  if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\n  return raw.times(100).toString();\n}\n\nexport function displayFixedValue(\n  raw,\n  decimals = 3,\n  finiteCheck = true,\n  round = true,\n  roundUp = false\n) {\n  try {\n    if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\n    if ((!isFinite(raw) || isNaN(raw)) && finiteCheck) return '--';\n    if (round && !roundUp)\n      return raw.toFixed(decimals, BigNumber.ROUND_DOWN).toString();\n    if (round && roundUp)\n      return raw.toFixed(decimals, BigNumber.ROUND_UP).toString();\n\n    return raw.toFixed(decimals).toString();\n  } catch (e) {\n    return '--';\n  }\n}\n\nexport function displayFixedPercent(raw, decimals = 3, round = true) {\n  try {\n    const value = displayFixedValue(displayPercentValue(raw), decimals, round);\n    if (isFinite(value) && new BigNumber(value).gt(0)) {\n      return value;\n    }\n    return '--';\n  } catch (e) {\n    return '--';\n  }\n}\n\n/**\n * @return {number}\n */\nexport function CdpNum(cdpId) {\n  if (cdpId === undefined) return 0;\n  return typeof cdpId === 'number'\n    ? cdpId\n    : typeof cdpId === 'object'\n    ? 0\n    : cdpId.hasOwnProperty('id')\n    ? cdpId.id\n    : 0;\n}\n\n// Calculations\nexport function bnOver(one, two, three) {\n  return toBigNumber(one).times(toBigNumber(two)).div(toBigNumber(three));\n}\n\nexport function maxDai(ethPrice, ethCollateral, liquidationRatio, debtValue) {\n  return bnOver(\n    toBigNumber(ethPrice),\n    toBigNumber(ethCollateral),\n    toBigNumber(liquidationRatio)\n  ).minus(toBigNumber(debtValue));\n}\n\nexport function maxPethDraw(\n  pethCollateral,\n  liquidationRatio,\n  debtValue,\n  pethPrice,\n  pethMin = 0\n) {\n  return toBigNumber(pethCollateral)\n    .minus(\n      bnOver(\n        toBigNumber(liquidationRatio).plus(0.001),\n        toBigNumber(debtValue),\n        toBigNumber(pethPrice)\n      )\n    )\n    .minus(toBigNumber(pethMin).times(1.0));\n}\n\nexport function maxEthDraw(\n  ethCollateral,\n  liquidationRatio,\n  debtValue,\n  ethPrice,\n  minEth = 0\n) {\n  return toBigNumber(ethCollateral)\n    .minus(\n      bnOver(\n        toBigNumber(liquidationRatio),\n        toBigNumber(debtValue),\n        toBigNumber(ethPrice)\n      )\n    )\n    .minus(toBigNumber(minEth).times(1.0));\n}\n\nexport function calcCollatRatio(ethPrice, ethQty, daiQty) {\n  return bnOver(toBigNumber(ethPrice), ethQty, daiQty);\n}\n\nexport function calcLiquidationPrice(\n  ethQty,\n  daiQty,\n  ethPrice,\n  liquidationRatio\n) {\n  const getInt = parseInt(ethPrice);\n  for (let i = getInt; i > 0; i--) {\n    const atValue = bnOver(i, ethQty, daiQty).lte(\n      toBigNumber(liquidationRatio)\n    );\n    if (atValue) {\n      return i;\n    }\n  }\n  for (let i = 100; i > 0; i--) {\n    const atValue = bnOver(i / 100, ethQty, daiQty).lte(\n      toBigNumber(liquidationRatio)\n    );\n    if (atValue) {\n      return i / 100;\n    }\n  }\n  return toBigNumber(0.01);\n}\n\nexport function checkAllowance(web3, tokenAddress, userAddress, proxyAddress) {\n  const contract = new web3.eth.contract(ERC20, tokenAddress);\n  return contract.methods.allowance(userAddress, proxyAddress).call();\n}\n","import {\n  addresses,\n  Vat,\n  Spotter,\n  GetCdps,\n  CdpManager,\n  ProxyRegistry\n} from '../makerHelpers';\nimport assert from 'assert';\n\nfunction padRight(string, chars, sign) {\n  return string + new Array(chars - string.length + 1).join(sign ? sign : '0');\n}\n\nfunction toHex(str, { with0x = true, rightPadding = 64 } = {}) {\n  let result = '';\n  for (let i = 0; i < str.length; i++) {\n    result += str.charCodeAt(i).toString(16);\n  }\n  if (rightPadding > 0) result = padRight(result, rightPadding);\n  return with0x ? '0x' + result : result;\n}\n\nfunction stringToBytes(str) {\n  return '0x' + Buffer.from(str).toString('hex');\n}\n\nfunction bytesToString(hex) {\n  return Buffer.from(hex.replace(/^0x/, ''), 'hex')\n    .toString()\n    .replace(/\\x00/g, ''); // eslint-disable-line no-control-regex\n}\n\nexport async function getProxy() {\n  const proxyReg = new this.web3.eth.Contract(\n    ProxyRegistry,\n    addresses.PROXY_REGISTRY\n  );\n\n  let proxy = await proxyReg.methods.proxies(this.account.address).call();\n  if (proxy === '0x0000000000000000000000000000000000000000') {\n    proxy = null;\n  }\n  return proxy;\n}\n\nexport async function getCdpIds(web3, proxyAddress) {\n  const contract = new web3.eth.Contract(GetCdps, addresses.GET_CDPS);\n  const results = await contract.methods\n    .getCdpsDesc(addresses.CDP_MANAGER, proxyAddress)\n    .call();\n  const ids = results.ids;\n  const ilks = results.ilks;\n  assert(ids.length === ilks.length, 'ids and ilks must be the same length');\n  return ids.map((id, index) => {\n    return { id: parseInt(id), ilk: bytesToString(ilks[index]) };\n  });\n}\n\nexport async function getDustValue(web3, symbol) {\n  const contract = new web3.eth.Contract(Vat, addresses.MCD_VAT);\n\n  return await contract.methods.ilks(toHex(symbol)).call();\n}\n\nexport async function getParValue(web3) {\n  const contract = new web3.eth.Contract(Spotter, addresses.MCD_SPOT);\n\n  return await contract.methods.par().call();\n}\n\nexport async function getUrns(web3, id, name) {\n  try {\n    const contract = new web3.eth.Contract(CdpManager, addresses.CDP_MANAGER);\n    const vat = new web3.eth.Contract(Vat, addresses.MCD_VAT);\n    const urn = await contract.methods.urns(id).call();\n    const result = await vat.methods.urns(stringToBytes(name), urn).call();\n    return result;\n  } catch (e) {\n    // eslint-disable-next-line\n    console.log(e);\n  }\n}\n","import { addresses, Vat, Spotter, GetCdps, CdpManager } from '../makerHelpers';\nimport assert from 'assert';\n\nfunction padRight(string, chars, sign) {\n  return string + new Array(chars - string.length + 1).join(sign ? sign : '0');\n}\n\nfunction toHex(str, { with0x = true, rightPadding = 64 } = {}) {\n  let result = '';\n  for (let i = 0; i < str.length; i++) {\n    result += str.charCodeAt(i).toString(16);\n  }\n  if (rightPadding > 0) result = padRight(result, rightPadding);\n  return with0x ? '0x' + result : result;\n}\n\nfunction stringToBytes(str) {\n  return '0x' + Buffer.from(str).toString('hex');\n}\n\nfunction bytesToString(hex) {\n  return Buffer.from(hex.replace(/^0x/, ''), 'hex')\n    .toString()\n    .replace(/\\x00/g, ''); // eslint-disable-line no-control-regex\n}\n\nexport async function getCdpIds(web3, proxyAddress) {\n  const contract = new web3.eth.Contract(GetCdps, addresses.GET_CDPS);\n  const results = await contract.methods\n    .getCdpsDesc(addresses.CDP_MANAGER, proxyAddress)\n    .call();\n  const ids = results.ids;\n  const ilks = results.ilks;\n  assert(ids.length === ilks.length, 'ids and ilks must be the same length');\n  const collected = ids.map((id, index) => {\n    return { id: parseInt(id), ilk: bytesToString(ilks[index]) };\n  });\n  return collected;\n}\n\nexport async function getDustValue(web3, symbol) {\n  const contract = new web3.eth.Contract(Vat, addresses.MCD_VAT);\n\n  return await contract.methods.ilks(toHex(symbol)).call();\n}\n\nexport async function getParValue(web3) {\n  const contract = new web3.eth.Contract(Spotter, addresses.MCD_SPOT);\n\n  return await contract.methods.par().call();\n}\n\nexport async function getUrns(web3, id, name) {\n  try {\n    const contract = new web3.eth.Contract(CdpManager, addresses.CDP_MANAGER);\n    const vat = new web3.eth.Contract(Vat, addresses.MCD_VAT);\n    const urn = await contract.methods.urns(id).call();\n    const result = await vat.methods.urns(stringToBytes(name), urn).call();\n    return result;\n  } catch (e) {\n    // eslint-disable-next-line\n    console.log(e);\n  }\n}\n"],"sourceRoot":""}